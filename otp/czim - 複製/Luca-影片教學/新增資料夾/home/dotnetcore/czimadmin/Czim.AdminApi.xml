<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Czim.AdminApi</name>
    </assembly>
    <members>
        <member name="T:Czim.AdminApi.Configure.AppConfigure">
            <summary>
            应用程序配置
            </summary>
        </member>
        <member name="M:Czim.AdminApi.Configure.AppConfigure.Build(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment,System.IServiceProvider,KUX.Infrastructure.MessageQueue.IMessageQueueProvider)">
            <summary>
            配置构建
            </summary>
            <param name="app"></param>
            <param name="env"></param>
            <param name="serviceProvider"></param>
            <param name="messageQueueProvider"></param>
        </member>
        <member name="T:Czim.AdminApi.Configure.AppConfigureServices">
            <summary>
            项目启动配置
            </summary>
        </member>
        <member name="F:Czim.AdminApi.Configure.AppConfigureServices._versionList">
            <summary>
            获取swagger版本标记
            </summary>
        </member>
        <member name="F:Czim.AdminApi.Configure.AppConfigureServices.prefixString">
            <summary>
            文件前缀
            </summary>
        </member>
        <member name="M:Czim.AdminApi.Configure.AppConfigureServices.GetVersionList">
            <summary>
            获取 Swagger 版本集合
            </summary>
            <returns></returns>
        </member>
        <member name="M:Czim.AdminApi.Configure.AppConfigureServices.Build(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            配置服务
            </summary>
            <param name="services"></param>
            <param name="configuration"></param>
        </member>
        <member name="T:Czim.AdminApi.Configure.LifetimeEventsHostedService">
            <summary>
            生命周期监听
            </summary>
        </member>
        <member name="M:Czim.AdminApi.Configure.LifetimeEventsHostedService.#ctor(Microsoft.Extensions.Logging.ILogger{Czim.AdminApi.Configure.LifetimeEventsHostedService},Microsoft.Extensions.Hosting.IHostApplicationLifetime)">
            <summary>
            构造
            </summary>
            <param name="logger">日志</param>
            <param name="appLifetime">生命周期</param>
        </member>
        <member name="M:Czim.AdminApi.Configure.LifetimeEventsHostedService.StartAsync(System.Threading.CancellationToken)">
            <summary>
            创建监听
            </summary>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Czim.AdminApi.Configure.LifetimeEventsHostedService.StopAsync(System.Threading.CancellationToken)">
            <summary>
            服务停止
            </summary>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Czim.AdminApi.Configure.LifetimeEventsHostedService.OnStarted">
            <summary>
            服务启动
            </summary>
        </member>
        <member name="M:Czim.AdminApi.Configure.LifetimeEventsHostedService.OnStopping">
            <summary>
            服务停止中
            </summary>
        </member>
        <member name="M:Czim.AdminApi.Configure.LifetimeEventsHostedService.OnStopped">
            <summary>
            服务停止之后
            </summary>
        </member>
        <member name="T:Czim.AdminApi.Controllers.AccountController">
            <summary>
            账户控制器
            </summary>
        </member>
        <member name="F:Czim.AdminApi.Controllers.AccountController._accountService">
            <summary>
            账户服务
            </summary>
        </member>
        <member name="F:Czim.AdminApi.Controllers.AccountController.czimEaseImSettingService">
            <summary>
            环信基本配置服务
            </summary>
        </member>
        <member name="M:Czim.AdminApi.Controllers.AccountController.#ctor(KUX.Services.Admin.Accounts.IAccountService,KUX.Services.Admin.CzmiSection.CzimEaseImSettingService)">
            <summary>
            构造
            </summary>
            <param name="accountService">账户服务</param>
            <param name="_czimEaseImSettingService">环信配置服务</param>
        </member>
        <member name="M:Czim.AdminApi.Controllers.AccountController.CheckAsync(KUX.Models.DTO.AuthUserFormDto)">
            <summary>
            检查帐户并获取 token
            </summary>
            <param name="authUserDto">Dto</param>
            <returns></returns>
        </member>
        <member name="T:Czim.AdminApi.Controllers.HomeController">
            <summary>
            错误控制器
            </summary>
        </member>
        <member name="M:Czim.AdminApi.Controllers.HomeController.Error">
            <summary>
            错误接口
            </summary>
            <returns></returns>
        </member>
        <member name="T:Czim.AdminApi.Controllers.JumpClientController">
            <summary>
            跳转客户端
            </summary>
        </member>
        <member name="M:Czim.AdminApi.Controllers.JumpClientController.Index">
            <summary>
            默认路由
            </summary>
            <returns></returns>
        </member>
        <member name="T:Czim.AdminApi.Filters.ApiAuthorizationActionFilter">
            <summary>
            后台 权限 管理 控制
            </summary>
        </member>
        <member name="F:Czim.AdminApi.Filters.ApiAuthorizationActionFilter._accountService">
            <summary>
            账号服务
            </summary>
        </member>
        <member name="M:Czim.AdminApi.Filters.ApiAuthorizationActionFilter.#ctor(KUX.Services.Admin.Accounts.IAccountService)">
            <summary>
            构造
            </summary>
            <param name="accountService">账户服务</param>
        </member>
        <member name="M:Czim.AdminApi.Filters.ApiAuthorizationActionFilter.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)">
            <summary>
            Action 执行前
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:Czim.AdminApi.Filters.ApiAuthorizationActionFilter.OnActionExecuted(Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext)">
            <summary>
            Action 执行后
            </summary>
            <param name="context"></param>
        </member>
        <member name="T:Czim.AdminApi.Middlewares.TakeUpTimeMiddleware">
            <summary>
            统计耗时 并记录日志中 中间件
            </summary>
        </member>
        <member name="F:Czim.AdminApi.Middlewares.TakeUpTimeMiddleware._stopwatch">
            <summary>
            计时器
            </summary>
        </member>
        <member name="F:Czim.AdminApi.Middlewares.TakeUpTimeMiddleware._logger">
            <summary>
            日志服务
            </summary>
        </member>
        <member name="F:Czim.AdminApi.Middlewares.TakeUpTimeMiddleware._sysOperationLogService">
            <summary>
            操作日志服务
            </summary>
        </member>
        <member name="F:Czim.AdminApi.Middlewares.TakeUpTimeMiddleware._httpContext">
            <summary>
            请求上下文
            </summary>
        </member>
        <member name="M:Czim.AdminApi.Middlewares.TakeUpTimeMiddleware.#ctor(Microsoft.Extensions.Logging.ILogger{Czim.AdminApi.Middlewares.TakeUpTimeMiddleware},KUX.Services.Admin.Framework.SysOperationLogService,Microsoft.AspNetCore.Http.IHttpContextAccessor)">
            <summary>
            构造
            </summary>
            <param name="logger">日志</param>
            <param name="sysOperationLogService">操作日志服务</param>
            <param name="iHttpContextAccessor">请求上下文</param>
        </member>
        <member name="M:Czim.AdminApi.Middlewares.TakeUpTimeMiddleware.InvokeAsync(Microsoft.AspNetCore.Http.HttpContext,Microsoft.AspNetCore.Http.RequestDelegate)">
            <summary>
            中间件执行
            </summary>
            <param name="context">请求上下文</param>
            <param name="next">下一个管道方法</param>
            <returns></returns>
        </member>
        <member name="M:Czim.AdminApi.Middlewares.TakeUpTimeMiddleware.IsApi(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            判断请求类型 是否 是 api
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Czim.AdminApi.Middlewares.TakeUpTimeMiddleware.ReadBodyAsync">
            <summary>
            读取 body 信息
            </summary>
            <returns></returns>
        </member>
    </members>
</doc>
